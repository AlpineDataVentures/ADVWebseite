---
// ContactForm.astro

const { contact_form_action } = Astro.props;
---

<form id="contact" name="contact" action={contact_form_action} method="POST">
  <div class="mb-6">
    <label for="firstname" class="form-label">
      Vorname <span class="text-red-500">*</span>
    </label>
    <input
      id="firstname"
      name="firstname"
      class="form-input"
      placeholder="Michaela"
      type="text"
      autocomplete="given-name"
      required
    />
  </div>
  <div class="mb-6">
    <label for="lastname" class="form-label">
      Nachname <span class="text-red-500">*</span>
    </label>
    <input
      id="lastname"
      name="lastname"
      class="form-input"
      placeholder="Schmidt"
      type="text"
      autocomplete="family-name"
      required
    />
  </div>
  <div class="mb-6">
    <label for="reason" class="form-label">
      Ihr Anliegen <span class="text-red-500">*</span>
    </label>
    <select id="reason" name="reason" class="form-input" required>
      <option value="" disabled selected>Bitte auswählen</option>
      <option value="Kennenlerntermin">Kennenlerntermin</option>
      <option value="Projektanfrage">Projektanfrage</option>
      <option value="Bewerbung">Bewerbung</option>
      <option value="Kooperationsanfrage">Kooperationsanfrage</option>
      <option value="Sonstiges">Sonstiges</option>
    </select>
  </div>
  <div class="mb-6">
    <label for="email" class="form-label">
      E-Mail-Adresse <span class="text-red-500">*</span>
    </label>
    <input
      id="email"
      name="email"
      class="form-input"
      placeholder="michaela.schmidt@email.com"
      type="email"
      autocomplete="email"
      required
    />
  </div>
  <div class="mb-6">
    <label for="phone" class="form-label"> Telefonnummer </label>
    <input
      id="phone"
      name="phone"
      class="form-input"
      placeholder="+49 89 1234567"
      autocomplete="tel"
      type="tel"
    />
  </div>
  <div class="mb-6">
    <label for="message" class="form-label">
      Nachricht <span class="text-red-500">*</span>
    </label>
    <textarea
      id="message"
      name="message"
      class="form-input"
      placeholder="Ihre Nachricht..."
      required
      rows="8"></textarea>
  </div>
  <div class="mb-6 flex items-center">
    <input
      id="consent"
      name="consent"
      type="checkbox"
      class="form-checkbox mr-2"
      required
    />
    <label for="consent" class="inline text-base">
      Ich willige ein, dass meine Daten verarbeitet und einzig zur
      Kontaktaufnahme durch die ADV verwendet werden. <span class="text-red-500"
        >*</span
      >
    </label>
  </div>
  <button type="submit" class="btn btn-primary">Absenden</button>
  <!-- Honeypot field (hidden) -->
  <div class="hidden">
    <label for="website">Website</label>
    <input
      type="text"
      id="website"
      name="website"
      value="Deine Webseite"
      autocomplete="off"
    />
  </div>
</form>
<div id="feedback" class="hidden mt-4 text-green-500">
  Vielen Dank! Ihre Nachricht wurde erfolgreich gesendet.
</div>
<div id="fail_feedback" class="hidden mt-4 text-red-500">
  Leider konnte Ihre Nachricht nicht übermittelt werden. Bitte schreiben Sie
  eine Mail an info(at)alpinedata.de!
</div>

<script>
  // utils/contactFormScript.ts

  const form = document.getElementById("contact") as HTMLFormElement | null;
  const xhr = new XMLHttpRequest();

  const handleFormSubmission = (event: SubmitEvent) => {
    // prevent page from reloading
    event.preventDefault();

    const target = event.target as HTMLFormElement;
    const data = target.elements as HTMLFormControlsCollection;

    // put into JSON object
    const formData = {
      firstname: (data.namedItem("firstname") as HTMLInputElement).value,
      lastname: (data.namedItem("lastname") as HTMLInputElement).value,
      email: (data.namedItem("email") as HTMLInputElement).value,
      message: (data.namedItem("message") as HTMLTextAreaElement).value,
      phone: (data.namedItem("phone") as HTMLTextAreaElement).value,
      reason: (data.namedItem("reason") as HTMLTextAreaElement).value,
      website: (data.namedItem("website") as HTMLTextAreaElement).value,
    };

    // Set POST request method to our netlify function
    xhr.open("POST", "/.netlify/functions/contact");

    // Set the request headers
    xhr.setRequestHeader("Content-Type", "application/json; charset=UTF-8");

    // Send the data as JSON to our netlify function
    xhr.send(JSON.stringify(formData));

    // Handle the response
    xhr.onload = function () {
      const response = JSON.parse(xhr.responseText);

      if (xhr.status === 200) {
        // The request was successful
        // show feedback message
        document.getElementById("feedback")?.classList.remove("hidden");
        target.reset();
      } else {
        // The request failed
        document.getElementById("fail_feedback")?.classList.remove("hidden");
      }
    };
  };

  // add the submission event listener
  form?.addEventListener("submit", handleFormSubmission, true);
</script>
